{"uuid":"c81b9cd887dd35a323b2a94284841445","name":"Inkitt","version":1.1,"url":"","language":"en","icon":"\u003d\u003d","source":"http://www.inkitt.com","regex":"(www.)?inkitt.com/stories/[a-z]+/\\d+.*","author":"Darkrai","describe":"","group":"other","supportUpdate":false,"chap":"local url \u003d ...\r\nlocal doc \u003d http:request(url):html()\r\nif doc ~\u003d nil then\r\n    return doc:select(\".story-page-text\"):html()\r\nend\r\nreturn nil","toc":"local url \u003d ...\r\n\r\nlocal bookId \u003d regexp:find(url, \"/stories/[a-z]+/(\\\\d+)\")\r\nlocal newU \u003d regexp:find(url, \"/stories/([a-z]+/\\\\d+)\")\r\nlocal list \u003d {}\r\nlocal doc \u003d http:request(\"https://www.inkitt.com/api/stories/\" .. bookId):table()\r\nif doc ~\u003d nil then\r\n    local chapters \u003d doc[\"chapters\"]\r\n    for _, value in ipairs(chapters) do\r\n        table.insert(list, core:new_chapter(value[\"name\"], \"https://www.inkitt.com/stories/\" .. newU .. \"/chapters/\" .. value[\"chapter_number\"]))\r\n    end\r\nend\r\nreturn list","detail":"local url \u003d ...\r\nurl \u003d \"https://www.inkitt.com/stories/\" .. regexp:find(url, \"/stories/([a-z]+/\\\\d+)\")\r\nlocal doc \u003d http:request(url):html()\r\nif doc ~\u003d nil then\r\n    local book \u003d {}\r\n    book[\"url\"] \u003d url\r\n    book[\"name\"] \u003d doc:select(\"h1.story-title\"):text()\r\n    book[\"author\"] \u003d doc:select(\"a.author-link .name\"):text()\r\n    book[\"cover\"] \u003d regexp:find(doc:html(), \"(http.*?vertical_storycovers.*?)\u0027\")\r\n    book[\"detail\"] \u003d doc:select(\".dlc\"):first():html()\r\n    book[\"description\"] \u003d doc:select(\".story-teaser\"):html()\r\n    return book\r\nend\r\nreturn nil","checked":true}