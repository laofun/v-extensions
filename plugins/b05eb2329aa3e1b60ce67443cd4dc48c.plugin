{"uuid":"b05eb2329aa3e1b60ce67443cd4dc48c","name":"Truyá»‡n QQ","version":1.1,"url":"","language":"vi","icon":"\u003d","source":"https://truyenqq.com","regex":"(www.)?truyenqq.com/truyen-tranh/[^/]+\\d+.html$","author":"Darkrai","describe":"","group":"truyentranh","supportUpdate":false,"chap":"local url \u003d ...\r\nlocal doc \u003d http:request(url):html()\r\nif doc ~\u003d nil then\r\n    return doc:select(\"div.story-see-content img\"):toString()\r\nend\r\nreturn nil","toc":"local url \u003d ...\r\n\r\nlocal list \u003d {}\r\nlocal doc \u003d http:request(url):html()\r\nif doc ~\u003d nil then\r\n    local el \u003d doc:select(\"div.block02 div.works-chapter-list a\")\r\n    for i \u003d el:size() - 1, 0, -1 do\r\n        local e \u003d el:get(i)\r\n        table.insert(list, core:new_chapter(e:text(), e:attr(\"href\"), \"http://truyenqq.com\"))\r\n    end\r\nend\r\nreturn list","search":"local key, page \u003d ...\r\nlocal doc \u003d http:request(\"https://truyenqq.com/tim-kiem/trang-\" .. page + 1 .. \".html?q\u003d\" .. key):html()\r\n\r\nlocal list \u003d {}\r\n\r\nif doc ~\u003d nil then\r\n\r\n    list[\"count\"] \u003d num:to_int(regexp:find(doc:select(\"ul.pagination-list a\"):last():attr(\"href\"), \"trang-(\\\\d+).html\"), 1)\r\n\r\n    local el \u003d doc:select(\"ul.list-stories li\")\r\n\r\n    if el ~\u003d nil then\r\n        local data \u003d {}\r\n        for i \u003d 0, el:size()-1 do\r\n            local e \u003d el:get(i)\r\n            table.insert(data, core:new_search(\r\n                    e:select(\"h3.title-book\"):text(),\r\n                    e:select(\"a\"):first():attr(\"href\"),\r\n                    e:select(\"img\"):first():attr(\"src\"),\r\n                    \"http://truyenqq.com\")\r\n            )\r\n        end\r\n        list[\"data\"] \u003d data\r\n    end\r\nend\r\nreturn list\r\n","detail":"local url \u003d ...\r\n\r\nlocal doc \u003d http:request(url):html()\r\n\r\nif doc ~\u003d nil then\r\n    local book \u003d {}\r\n    book[\"name\"] \u003d  doc:select(\"h1\"):text()\r\n    book[\"cover\"] \u003d core:merge_url(\"https://truyenqq.com\", doc:select(\"div.block01 img\"):first():attr(\"src\"))\r\n    book[\"author\"] \u003d regexp:find(doc:select(\"div.block01\"):html(), \"tac-gia.*?\u003e(.*?)\u003c/a\u003e\")\r\n    book[\"detail\"] \u003d doc:select(\"div.block01 div.txt\"):first():html()\r\n    book[\"description\"] \u003d doc:select(\"p.txt.txt01\"):html()\r\n    return book\r\nend\r\nreturn nil","checked":true}