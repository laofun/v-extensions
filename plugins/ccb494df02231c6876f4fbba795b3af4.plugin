{"uuid":"ccb494df02231c6876f4fbba795b3af4","name":"Truyá»‡n YY","version":1.3,"url":"","language":"vi","icon":"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\u003d","source":"http://truyenyy.com","regex":"truyenyy.com/truyen/[0-9a-z-]+/?$","author":"Darkrai","describe":"","group":"dich","supportUpdate":false,"chap":"local url \u003d ...\r\nlocal doc \u003d http:request(url):timeout(0):html()\r\nif doc ~\u003d nil then\r\n    local txt \u003d doc:select(\"div.inner\"):html()\r\n    if (txt \u003d\u003d nil or string.len(txt) \u003c 1000) then\r\n        if (text:contains(doc:html(), \"btn_buy\")) then\r\n            return core:create_purchase(url)\r\n        end\r\n        if (text:contains(txt, \"/login/\")) then\r\n            return core:create_login(\"https://truyenyy.com/login/\")\r\n        end\r\n        local id \u003d regexp:find(doc:html(), \"chap_id\u003d(.*?)\u0026\")\r\n        local part \u003d num:to_int(regexp:find_last(doc:html(), \"\u0026part\u003d(\\\\d)\\\"\"), 0)\r\n        txt \u003d \"\"\r\n        for i \u003d 0, part do\r\n            local content \u003d http:request(\"https://truyenyy.com/web-api/novel/chapter-content-get/?chap_id\u003d\" .. id .. \"\u0026part\u003d\" .. i):timeout(0):table()\r\n            if (content ~\u003d nil) then\r\n                txt \u003d txt .. text:remove(content[\u0027content\u0027], {\"\u003cstyle\u003e.*?\u003c/style\u003e\", \"\u003c[a-z]{2,} style\u003d.*?\u003e.*?\u003c/[a-z]{2,}\u003e\", \"\u003c/?[a-z]{2,}\u003e\"})\r\n            end\r\n        end\r\n\r\n    end\r\n\r\n    return txt\r\nend\r\nreturn nil","toc":"local url \u003d ...\r\n\r\nlocal doc \u003d http:request(url):timeout(0):html()\r\nif doc ~\u003d nil then\r\n    local list \u003d {}\r\n    local el \u003d doc:select(\"tbody tr\")\r\n    for i \u003d 0, el:size() - 1 do\r\n        local e \u003d el:get(i)\r\n        local ch \u003d e:select(\"td\"):first():text()\r\n        ch \u003d ch .. \": \" .. e:select(\"td\"):get(1):text()\r\n        table.insert(list, core:new_chapter(ch, e:select(\"a\"):first():attr(\"href\"), \"https://truyenyy.com\"))\r\n    end\r\n    return list\r\nend\r\nreturn nil","page":"local url \u003d ...\r\n\r\nlocal list \u003d {}\r\nlocal doc \u003d http:request(url .. \"/danh-sach-chuong\"):timeout(0):html()\r\n\r\nlocal page \u003d num:to_int(regexp:find_last(doc:html(), \"href.*?p\u003d\\\\d+.*?\u003e(\\\\d+)\u003c\"), 1)\r\n\r\nfor i \u003d 1, page do\r\n    table.insert(list, url .. \"/danh-sach-chuong/?p\u003d\" .. i)\r\nend\r\n\r\nreturn list","search":"local key, page \u003d ...\r\nlocal doc \u003d http:request(\"https://truyenyy.com/web-api/novel/search/?q\u003d\" .. key .. \"\u0026page\u003d\" .. page + 1):timeout(0):table()\r\n\r\nif doc ~\u003d nil then\r\n    local list \u003d {}\r\n    list[\"count\"] \u003d doc[\"num_pages\"]\r\n\r\n    local data \u003d {}\r\n    local  results \u003d doc[\"results\"]\r\n    for _, value in ipairs(results) do\r\n        table.insert(data, core:new_search(\r\n                value[\"title\"],\r\n                value[\"url\"],\r\n                value[\"cover_picture\"],\r\n                \"https://truyenyy.com\")\r\n        )\r\n    end\r\n    list[\"data\"] \u003d data\r\n    return list\r\nend\r\nreturn nil\r\n","detail":"local url \u003d ...\r\n\r\nlocal doc \u003d http:request(url):timeout(0):html()\r\n\r\nif doc ~\u003d nil then\r\n    local book \u003d {}\r\n    book[\"name\"] \u003d doc:select(\"div.info h1\"):text()\r\n    local cover \u003d doc:select(\"div.novel-info img\"):attr(\"src\")\r\n    if (cover \u003d\u003d nil or string.len(cover) \u003d\u003d 0) then\r\n        cover \u003d doc:select(\"div.novel-info img\"):attr(\"data-src\")\r\n    end\r\n    book[\"cover\"] \u003d core:merge_url(\"http:\", cover)\r\n    book[\"detail\"] \u003d doc:select(\"div.info .author\"):text()\r\n    book[\"author\"] \u003d doc:select(\"div.info .author\"):text()\r\n    book[\"description\"] \u003d doc:select(\"section#id_novel_summary\"):html()\r\n    return book\r\nend\r\nreturn nil","checked":true}